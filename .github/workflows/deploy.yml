name: Deploy to Lightsail

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH to Lightsail
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            REPO_DIR=/opt/deribit
            APP_DIR=$REPO_DIR/apps/node-app
            REPO_URL=https://github.com/emersonary/deribit.git
            BRANCH=main

            echo "== ensure repo dir exists and owned by ${USER} =="
            sudo mkdir -p "$REPO_DIR"
            sudo chown -R "$USER":"$USER" "$REPO_DIR"

            echo "== bootstrap monorepo if missing =="
            if [ ! -d "$REPO_DIR/.git" ]; then
              if [ -z "$(ls -A "$REPO_DIR")" ]; then
                echo "[clone] cloning $REPO_URL#$BRANCH into $REPO_DIR"
                git clone --branch "$BRANCH" --single-branch "$REPO_URL" "$REPO_DIR"
              else
                echo "[init] non-empty dir without .git â†’ git init + fetch"
                git -C "$REPO_DIR" init
                git -C "$REPO_DIR" remote remove origin 2>/dev/null || true
                git -C "$REPO_DIR" remote add origin "$REPO_URL"
                git -C "$REPO_DIR" fetch origin
                git -C "$REPO_DIR" checkout -B "$BRANCH" "origin/$BRANCH"
              fi
            fi

            echo "== normalize git perms and safety =="
            sudo chown -R "$USER":"$USER" "$REPO_DIR/.git"
            git config --global --add safe.directory "$REPO_DIR" || true

            echo "== update monorepo from origin =="
            git -C "$REPO_DIR" fetch origin --prune
            git -C "$REPO_DIR" reset --hard "origin/$BRANCH"

            echo "== run app deploy =="
            bash "$APP_DIR/deploy.sh"
